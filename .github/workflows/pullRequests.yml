# This workflow will install Python dependencies, run tests and lint with a single version of Python, and create a codecoverage report with code cov
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python Pull Request Tester

on:
  pull_request:
    branches: [ master ]

jobs:
  buildAndTest:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest diff_cover
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        echo "Pull request's base branch is: ${BASE_BRANCH}"
    - name: Test with pytest
      run: |
        pytest
    - name: Check test coverage
      run: |
        pip install coverage
        coverage run -m pytest
        coverage report
        coverage xml
        coverage xml -o coverage1.xml
        echo ::set-env name=COVERAGE::$(coverage report)
        realpath coverage1.xml
        realpath coverage.xml
    - name: Check branch name
      uses: mdecoleman/pr-branch-name@1.0.0
      id: vars
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - run: echo ${{ steps.vars.outputs.branch }}
    - name: Codecov Upload
      uses: codecov/codecov-action@v1.0.7
      with:
        # User defined upload name. Visible in Codecov UI
        name: codecov_test
        # Repository upload token - get it from codecov.io. Required only for private repositories
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        # Flag upload to group coverage metrics (e.g. unittests | integration | ui,chrome)
        flags: unittests
        # Environment variables to tag the upload with (e.g. PYTHON | OS,PYTHON)
        env_vars: PYTHON
        # Specify whether or not CI build should fail if Codecov runs into an error during upload
        fail_ci_if_error: true # optional, default = false
    - name: PR Comment
      uses: github-actions-up-and-running/pr-comment@v1.0.1
      with:
        # GITHUB_TOKEN secret
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        # Message to comment
        message: '${{ env.COVERAGE }}'
    - name: Changed Files
      uses: lots0logs/gh-action-get-changed-files@2.1.4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Check test coverage
      uses: AveryCameronUofR/test-coverage-check-gh-action@1.0.9
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
